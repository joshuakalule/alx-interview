#!/usr/bin/python3
"""
Task 0. Change comes from within
"""


def helper(coins, current_total, count):
    for i, coin in enumerate(coins):
        # print(f"coin[{i}]: {coin} current_total: {current_total}")
        next_total = current_total - coin
        if next_total < 0:
            continue
        if next_total == 0:
            return count + 1
        new_coins = [c for c in coins if c != coin]
        helper_return = helper(coins, next_total, count + 1)
        if helper_return == -1:
            continue
        return helper_return
    return -1

def makeChange(coins, total):
    """
    Given a pile of coins of different values, determine the fewest
    number of coins needed to meet a given amount total
    """
    if total <= 0:
        return 0
    sorted_coins = sorted(coins,reverse=True)

    return helper(sorted_coins, total, 0)

if __name__ == '__main__':
    print(makeChange([1256, 54, 48, 16, 102], 1453))
